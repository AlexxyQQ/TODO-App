name: "Build Release" # The name of the workflow
on:
  pull_request: # Trigger the workflow on pull requests
    branches:
      - cicd
    paths: # Only trigger the workflow if the following files are changed
      - "CHANGELOGS.md"

  push: # Trigger the workflow on push to main, master, and develop branches
    branches:
      - cicd
    paths: # Only trigger the workflow if the following files are changed
      - "CHANGELOGS.md"

jobs:
  build_android: # Define a job named "build"
    name: Android Build Release # Name of the job
    runs-on: ubuntu-latest # Use ubuntu-latest as the runner

    steps: # List of steps to perform for this job
      # Checkout the code from the repo
      - uses: actions/checkout@v2

      # Setup Java environment
      - name: Setting Java Environment
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Cache Gradle files for faster builds
      - name: Gradle Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Setup Flutter environment
      - name: Setting Flutter Environment
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.1"

      # Install packages required for the app
      - name: Get Packages
        run: flutter pub get

      # Build APK files
      - name: Build Apk
        run: flutter build apk --split-per-abi --build-number=${GITHUB_RUN_NUMBER}

      # Rename the APK files for better readability
      - name: Rename APK files
        run: |
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/Template-v1.${{ github.run_number }}-arm64-v8a.apk
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build/app/outputs/flutter-apk/Template-v1.${{ github.run_number }}-armeabi-v7a.apk
          mv build/app/outputs/flutter-apk/app-x86_64-release.apk build/app/outputs/flutter-apk/Template-1.${{ github.run_number }}-x86_64.apk

      # Create a Github release
      - name: Get Branch Name
        id: branch_name
        run: echo "::set-output name=branch::$(echo $GITHUB_REF | awk -F / '{print $3}')"

      # Create a Github release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v1.${{ github.run_number }}" # Tag name for the release
          name: "Template-v1.${{ github.run_number }}" # Name of the release
          body_path: CHANGELOGS.md # Contents of the changelog file
          files: |
            build/app/outputs/flutter-apk/*.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # GitHub token used to create the release

  build_windows: # Define a job named "build"
    name: Window Build Release # Name of the job
    runs-on: windows-latest # Use windows-latest as the runner

    steps: # List of steps to perform for this job
      # Checkout the code from the repo
      - uses: actions/checkout@v2

      # Setup Java environment
      - name: Setting Java Environment
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Cache Gradle files for faster builds
      - name: Gradle Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Setup Flutter environment
      - name: Setting Flutter Environment
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.1"

      - name: Enable windows build
        run: flutter config --enable-windows-desktop

      # Install packages required for the app
      - name: Get Packages
        run: flutter pub get

      # Build Windows files
      - name: Build Windows App
        run: flutter build windows --release

      # Zip the build files
      - name: Package Release
        uses: thedoctor0/zip-release@master
        with:
          type: "zip"
          filename: Template-v1.${{ github.run_number }}-windows.zip
          directory: build/windows/runner/Release

      # Create a Github release
      - name: Get Branch Name
        id: branch_name
        run: echo "::set-output name=branch::$(echo $GITHUB_REF | awk -F / '{print $3}')"

      # Create a Github release
      - name: Create Release
        uses: softprops/action-gh-release@v1

        with:
          tag_name: "v1.${{ github.run_number }}" # Tag name for the release
          name: "Template-v1.${{ github.run_number }}" # Name of the release
          body_path: CHANGELOGS.md # Contents of the changelog file
          files: build/windows/runner/Release/Template-v1.${{ github.run_number }}-windows.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  build_linux: # Define a job named "build"
    name: Linux Build Release # Name of the job
    runs-on: ubuntu-latest # Use ubuntu-latest as the runner

    steps: # List of steps to perform for this job
      # Checkout the code from the repo
      - uses: actions/checkout@v2

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: "3.13.1"
          channel: "stable"

      # Install packages required and dependencies for the app
      - name: Install Linux dependencies
        run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev libsecret-1-dev liblzma-dev libjsoncpp-dev libstdc++-12-dev libunwind-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-good
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs

      # Enable Linux
      - name: Enable linux build
        run: flutter config --enable-linux-desktop

      # Build Linux files
      - name: Build artifacts
        run: flutter build linux --release

      # Zip the build files
      - name: Package Release files
        uses: thedoctor0/zip-release@master
        with:
          type: "zip"
          filename: Template-v1.${{ github.run_number }}-linux.zip
          directory: build/linux/x64/release/bundle

      # Create a Github release
      - name: Get Branch Name
        id: branch_name
        run: echo "::set-output name=branch::$(echo $GITHUB_REF | awk -F / '{print $3}')"

      # Create a Github release
      - name: Release to github
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: "v1.${{ github.run_number }}" # Tag name for the release
          name: "Template-v1.${{ github.run_number }}" # Name of the release
          body_path: CHANGELOGS.md # Contents of the changelog file
          files: build/linux/x64/release/bundle/Template-v1.${{ github.run_number }}-linux.zip
          draft: false
          prerelease: false

  build_macos: # Define a job named "build"
    name: MacOS Build Release # Name of the job
    runs-on: macos-latest

    steps: # List of steps to perform for this job
      # Checkout the code from the repo
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: "3.13.1"
          channel: "stable"

      # Enable MacOS
      - name: Enable macOS build
        run: flutter config --enable-macos-desktop

      # Build MacOs files
      - name: Build artifacts
        run: flutter build macos --release --no-tree-shake-icons

      # Zip the build files
      - name: Package Release
        uses: thedoctor0/zip-release@master
        with:
          type: "zip"
          filename: Template-v1.${{ github.run_number }}-macos.zip
          directory: build/macos/Build/Products/Release

      # Create a Github release
      - name: Get Branch Name
        id: branch_name
        run: echo "::set-output name=branch::$(echo $GITHUB_REF | awk -F / '{print $3}')"

      # Create a Github release
      - name: Release to github
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v1.${{ github.run_number }}" # Tag name for the release
          name: "Template-v1.${{ github.run_number }}" # Name of the release
          body_path: CHANGELOGS.md # Contents of the changelog file
          files: build/macos/Build/Products/Release/Template-v1.${{ github.run_number }}-macos.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
#! IOS Build Needs Certificates
# build_ios: # Define a job named "build"
#   name: IOS Build Release # Name of the job
#   runs-on: macos-latest

#   steps: # List of steps to perform for this job
#     # Checkout the code from the repo
#     - uses: actions/checkout@v3

#     # Setup Flutter environment
#     - uses: subosito/flutter-action@v2.10.0
#       with:
#         flutter-version: "3.13.1"
#         channel: "stable"

#     # Enable MacOS
#     - name: Enable macOS build
#       run: flutter config --enable-macos-desktop

#     # Install packages required for the app
#     - name: Get Packages
#       run: flutter pub get

#     # Build IOS files
#     - name: Build artifacts
#       run: flutter build ipa --release

#     # Create a Github release
#     - name: Get Branch Name
#       id: branch_name
#       run: echo "::set-output name=branch::$(echo $GITHUB_REF | awk -F / '{print $3}')"

#     # Create a Github release
#     - name: Release to github
#       uses: softprops/action-gh-release@v1
#       with:
#         tag_name: "v1.${{ github.run_number }}" # Tag name for the release
#         name: "Template-v1.${{ github.run_number }}" # Name of the release
#         body_path: CHANGELOGS.md # Contents of the changelog file
#         files: build/ios/ipa/*.ipa
#         draft: false
#         prerelease: false
#       env:
#         GITHUB_TOKEN: ${{ secrets.TOKEN }}
